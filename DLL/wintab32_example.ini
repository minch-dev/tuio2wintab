[Switches]
logging=0
tuio_udp=1
tuio_tcp=0
#0 means we don't move mouse cursor while drawing, coords are passed by wintab interface and we navigate with the ending of a line drawn, best quality
#1 means mouse is emulated while dragging and wintab is off, expect jigsaw lines (pixel rounding artifacts)
#2..4 might be other options later
tuio_mouse=0
#[not implemented], this prop determines if we use buttons of a modified mouse which serves as an IR stylus for the tablet, or if we use pressure levels to detect clicks
tuio_buttons=1

[IO]
#[not implemented], there is a problem with "ini read" and "server start" events sync
log_file=C:\wintab32.txt
tuio_udp_port=3333
tuio_udp_address=localhost
tuio_tcp_port=3000
tuio_tcp_address=localhost




[Metrics]
#we need to determine all of the coordinates of the window that we're drawing in
#the format is:
#┌────────┐	
#│      2 │
#│        │ 1600 x 900
#├──────┬─┘
#│      │
#│ 1    │  1280 x 1024
#└──────┘
#total area 1600 x 1924

#┌───────┐	
#│     2 │  1360 x 768
#├──────┬┘
#│      │
#│ 1    │  1280 x 1024
#└──────┘
#total area 1600 x 1792

#┌──────────┐	
#│        2 │
#│          │ 1920 x 1080
#├──────┬───┘
#│      │
#│ 1    │  1280 x 1024
#└──────┘
#total area 1920 x 2104
#"1" isn't necessarily the "main" one

#these variables are in 0.0-1.0 coords just like in TUIO output
#they define the working part of the sensor frame
#typically the screen isn't exactly 4:3 (ps3cam ratio) and the screen and camera aren't perfectly centered
#so we have to exclude some areas to the right/left or top/bottom from calculation
#we divide these values by 10000000 to get actual floating point coords later

#  y↓
# x→┌─╔──────╗─┐	
#   │░│      │░│
#   │░│      │░│ ↕height
#   └─╚──────╝─┘
#      ↔width

#┌──────┐	
#╔──────╗	
#│      │
#│      │
#╚──────╝
#└──────┘

tuio_x=0325269
tuio_y=0
tuio_w=9299733
tuio_h=10000000


#prevmonitor_x / totalmonitor_width * 65535
#0 / 0 * 65535
wintab_x=0

#prevmonitor_y2 / totalmonitor_height * 65535
#1080 / 2104 * 65535
wintab_y=33640

#ourmonitor_width / totalmonitor_width * 65535
#1280 / 1920 * 65535
wintab_w=43690

#ourmonitor_height / totalmonitor_height * 65535
#1024 / 2104 * 65535
wintab_h=31895


#the position of our monitor according to the main monitor's mouse coordinate system
#main monitor's resolution defines pixel ratio, e.g. 65535/1024 & 65535/768
#so for the main monitor coordinates are 0-65535 for both x & y
#the rest are higher/lower (minus coords are fine too I suppose) of 0-65535 xy range
#their coords are calculated according to position relative to main with ratio applied to their pixel coordinates
mouse_x=0
mouse_y=65535
#ourmonitor_width / mainmonitor_width * 65535
#1280 / 1920 * 65535
mouse_w=43690
#ourmonitor_height / mainmonitor_height * 65535
#1024 / 1080 * 65535
mouse_h=62137


#these are set in stone (0 / 0xffff), but it doesn't hurt to include those here just in case
tablet_height=65535
tablet_width=65535
#[not implemented]
pressure_max = 1023
pressure_min = 0
pressure_contact = 10